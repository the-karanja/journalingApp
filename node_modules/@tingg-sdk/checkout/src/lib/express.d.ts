/**
 * Created by Kelvin Macharia on 11/03/2024
 */
import { Environment, ExpressInput, ExpressReturnType } from "./types";
/**
 * Create a checkout request
 *
 * Step 1: Validates input payloads
 *
 * Step 2: Fetch auth token using the provided client ID and client secret.
 *
 * Step 3: Using the returned token it sends a POST request to create checkout url using the provided payload
 * Handles various error cases including authentication failure, validation errors, and serialization
 * errors.
 *
 * In case of success, it returns the created long URL and short URL.
 *
 * @param apiKey {string} Your API KEY.
 * @param clientId {string} Your clientId used as one of the pair of credentials to create an authentication token with which requests will be authorized with.
 * @param clientSecret {string}  Your clientId used as one of the pair of credentials to create an authentication token with which requests will be authorized with.
 * @param payload {Partial<Payload>} Checkout details.
 * @param environment {Environment}
 * @returns {Promise<ExpressReturnType>} contains the data {{long_url: string, short_url: string}} and errors {string}
 *
 */
export declare const create: ({ apiKey, clientId, clientSecret, payload }: ExpressInput, environment?: Environment) => Promise<ExpressReturnType>;
